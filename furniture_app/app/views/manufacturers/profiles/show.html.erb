<main class="main-container">

  <section id="category">

      <div class="personal-data-cat">
        <div class="icon-cat">
          <%= image_tag "header/user-svgrepo-com.svg", class: "icon-cat-user", alt: "Profile icon" %>
        </div>

        <div class="text-cat">
          <p id="user-first-last-name"><%= current_manufacturer.title_manufacturer %></p>
          <p id="user-email"><%= current_manufacturer.email %></p>
        </div>
      </div>

      <div class="item-cat" id="add-item-cat">
        <h1 class="item-cat-title">Додати товари</h1>
      </div>

      <div class="item-cat" id="remove-item-cat">
        <h1 class="item-cat-title">Видалити товари</h1>
      </div>

      <div class="item-cat" id="item-list-cat">
        <h1 class="item-cat-title">Переглянути товари</h1>
      </div>
  </section>

  <section id="category-data">
    <div class="personal-data">

      <h1 class="personal-data-header">Особиста інформація</h1>
      
      <div class="personal-data-full-name-grid">
        <div class="full-name-column">
          <p class="personal-data-column-title">Прізвище</p>
          <p class="personal-data-field"><%= current_manufacturer.person_last_name %></p>
        </div>

        <div class="full-name-column">
          <p class="personal-data-column-title">Ім'я</p>
          <p class="personal-data-field"><%= current_manufacturer.person_name %></p>
        </div>

        <div class="full-name-column">
          <p class="personal-data-column-title">По батькові</p>
          <p class="personal-data-field"><%= current_manufacturer.person_middle_name %></p>
        </div>
      </div>

      <div class="contact-data-grid">
        <div class="contact-data-column">
          <p class="personal-data-column-title">Назва виробника</p>
          <p class="contact-data-field"><%= current_manufacturer.title_manufacturer %></p>
        </div>

        <div class="contact-data-column">
          <p class="personal-data-column-title">Номер телефону</p>
          <p class="contact-data-field"><%= current_manufacturer.phone_number %></p>
        </div>

        <div class="contact-data-column">
          <p class="personal-data-column-title">Email</p>
          <p class="contact-data-field"><%= current_manufacturer.email %></p>
        </div>
      </div>

      <button class="change-data-button">Редагувати</button>

    </div>

    <div class="add-item">
    </div>

    <div class="remove-item">
    </div>

    <div class="item-list">
    </div>

  </section>

</main>

<script>
    document.addEventListener("DOMContentLoaded", function() {

        // Категорії
        const personalDataCat = document.querySelector('.personal-data-cat');
        const addItemCat = document.querySelector('#add-item-cat');
        const removeItemCat = document.querySelector('#remove-item-cat');
        const itemListCat = document.querySelector('#item-list-cat');

        // Блоки даних
        const personalData = document.querySelector('.personal-data');
        const addItem = document.querySelector('.add-item');
        const removeItem = document.querySelector('.remove-item');
        const itemList = document.querySelector('.item-list');

        // Обробники подій для категорій

        // При кліку на категорію "Особиста інформація"
        personalDataCat.addEventListener('click', function() {
            // Приховати всі блоки даних крім personalData
            personalData.style.display = 'block';
            addItem.style.display = 'none';
            removeItem.style.display = 'none';
            itemList.style.display = 'none';
        });

        // При кліку на категорію "Додати товари"
        addItemCat.addEventListener('click', function() {
            // Приховати всі блоки даних крім addItem
            personalData.style.display = 'none';
            addItem.style.display = 'block';
            removeItem.style.display = 'none';
            itemList.style.display = 'none';
        });

        // При кліку на категорію "Видалити товари"
        removeItemCat.addEventListener('click', function() {
            // Приховати всі блоки даних крім removeItem
            personalData.style.display = 'none';
            addItem.style.display = 'none';
            removeItem.style.display = 'block';
            itemList.style.display = 'none';
        });

        // При кліку на категорію "Переглянути товари"
        itemListCat.addEventListener('click', function() {
            // Приховати всі блоки даних крім itemList
            personalData.style.display = 'none';
            addItem.style.display = 'none';
            removeItem.style.display = 'none';
            itemList.style.display = 'block';
        });

        // Логіка редагування даних

        const editButton = document.querySelector('.change-data-button');
        const personalDataFields = document.querySelectorAll('.personal-data-field');
        const contactDataFields = document.querySelectorAll('.contact-data-field');
        let isEditing = false;

        // Функція, що змінює активність полів редагування
        function toggleFieldsActivity(fields, isEditable) {
            fields.forEach(field => {
                if (field.tagName === 'INPUT') {
                    field.disabled = !isEditable;
                } else {
                    field.contentEditable = isEditable;
                    if (isEditable) {
                        field.textContent = field.dataset.value || '';
                    } else {
                        field.dataset.value = field.textContent;
                    }
                }
            });
        }

        // Вимкнення редагування для всіх полів при завантаженні сторінки
        toggleFieldsActivity(personalDataFields, false);
        toggleFieldsActivity(contactDataFields, false);

        // Створення кнопок "Зберегти" та "Скасувати"
        function createButtons() {

            const saveButton = document.createElement('button');
            const cancelButton = document.createElement('button');

            saveButton.textContent = 'Зберегти';
            saveButton.classList.add('save-data-button');

            cancelButton.textContent = 'Скасувати';
            cancelButton.classList.add('cancel-button');

            editButton.style.display = 'none'; // Приховуємо кнопку "Редагувати"

            // Додаємо кнопки "Зберегти" та "Скасувати"
            editButton.insertAdjacentElement('afterend', saveButton);
            saveButton.insertAdjacentElement('afterend', cancelButton);

            // Обробники подій для кнопок
            saveButton.addEventListener('click', saveData);
            cancelButton.addEventListener('click', cancelEditing);

            // Додаємо клас editable до полів, щоб застосувати стилі для активного редагування
            personalDataFields.forEach(field => field.classList.add('editable'));
            contactDataFields.forEach(field => field.classList.add('editable'));
        }

        // Функція скасування редагування
        function cancelEditing() {
            const saveButton = document.querySelector('.save-data-button');
            const cancelButton = document.querySelector('.cancel-button');

            // Повертаємо попередні значення полів
            personalDataFields.forEach(field => {
                if (field.tagName === 'INPUT') {
                    field.value = field.dataset.value || '';
                } else {
                    field.textContent = field.dataset.value || '';
                }
            });

            contactDataFields.forEach(field => {
                if (field.tagName === 'INPUT') {
                    field.value = field.dataset.value || '';
                } else {
                    field.textContent = field.dataset.value || '';
                }
            });

            toggleFieldsActivity(personalDataFields, false);
            toggleFieldsActivity(contactDataFields, false);

            // Видаляємо кнопки "Зберегти" та "Скасувати"
            saveButton.remove();
            cancelButton.remove();

            // Показуємо кнопку "Редагувати" та змінюємо текст на неї
            editButton.style.display = 'inline-block'; // Показуємо кнопку "Редагувати"
            editButton.textContent = 'Редагувати';
            isEditing = false;

            // Видаляємо клас для стилізації полів
            personalDataFields.forEach(field => field.classList.remove('editable'));
            contactDataFields.forEach(field => field.classList.remove('editable'));
        }

        // Функція збереження даних
        function saveData() {
            personalDataFields.forEach(field => {
                if (field.tagName === 'INPUT') {
                    field.dataset.value = field.value;
                } else {
                    field.dataset.value = field.textContent;
                }
            });
            contactDataFields.forEach(field => {
                if (field.tagName === 'INPUT') {
                    field.dataset.value = field.value;
                } else {
                    field.dataset.value = field.textContent;
                }
            });
            cancelEditing();
        }

        // Функція перевірки заповнення всіх полів перед активацією кнопки "Зберегти"
        function checkFields() {
            let isFieldsFilled = false;
            personalDataFields.forEach(field => {
                if (field.textContent.trim() !== '') {
                    isFieldsFilled = true;
                }
            });
            contactDataFields.forEach(field => {
                if (field.textContent.trim() !== '') {
                    isFieldsFilled = true;
                }
            });
            const saveButton = document.querySelector('.save-data-button');
            saveButton.disabled = !isFieldsFilled;
        }

        // Додаємо обробники подій для кнопки "Редагувати"
        editButton.addEventListener('click', function() {
            if (!isEditing) {
                toggleFieldsActivity(personalDataFields, true);
                toggleFieldsActivity(contactDataFields, true);

                createButtons();

                editButton.textContent = '';
                isEditing = true;
            }
        });

        // Додаємо обробники подій для всіх полів вводу
        personalDataFields.forEach(field => {
            field.addEventListener('input', checkFields);
        });
        contactDataFields.forEach(field => {
            field.addEventListener('input', checkFields);
        });
    });
</script>